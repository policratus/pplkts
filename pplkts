#!/usr/bin/env python3
"""
🐈👱👧👦 Pplkts

Recognizes simple objects on images, like people and cats.
"""
import cv2
import fire

from classifiers.cascade import Classifiers

class Pplkts(Classifiers):
    """
    Methods for image capture
    """
    @staticmethod
    def _bounding_box(frame, positions, title, color):
        """
        Draws a bounding box on the recognized object

        Parameters
        ----------
        frame: numpy.ndarray
            The current frame of video stream

        positions: iterable
            With the position of found object

        title: str
            A title for the object

        color: tuple
            With BGR channel values
        """
        for position_x, position_y, width, height in positions:
            if position_y - 10 <= 0:
                text_position_y = position_y + 10
            else:
                text_position_y = position_y - 10
            cv2.putText(
                frame,
                title,
                (position_x, text_position_y),
                cv2.FONT_HERSHEY_DUPLEX,
                width / 200,
                (255, 255, 255),
                1
            )

            cv2.rectangle(
                frame,
                (position_x, position_y),
                (position_x + height, position_y + height),
                color,
                2
            )

        return frame

    @classmethod
    def _detections(cls, image):
        """
        Wrapper for several supported detections

        Parameters
        -----------
        image: numpy.ndarray
            Containing image or frame to process
        """
        image_grayscale = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

        face_positions = cls._detect_face(image_grayscale)
        eyes_positions = cls._detect_eyes(image_grayscale)
        cat_positions = cls._detect_cat(image_grayscale)

        return face_positions, eyes_positions, cat_positions

    @classmethod
    def recognize(cls, path):
        """
        Detect objects on a picture

        Parameters
        ----------
        path: str
            Path where image file are
        """
        image = cv2.imread(path)

        face_positions, eyes_positions, cat_positions = cls._detections(image)

        image = cls._bounding_box(image, face_positions, 'Frontal Face', (62, 97, 176))
        image = cls._bounding_box(image, eyes_positions, 'Eyes', (199, 210, 6))
        image = cls._bounding_box(image, cat_positions, 'Cat', (6, 210, 199))

        cv2.imshow('Pplkts', image)

        cv2.waitKey(0)

        cv2.destroyAllWindows()

if __name__ == '__main__':
    fire.Fire(Pplkts)
